substitutions:
  device_name: s0_dongle_unitname
  friendly_name: S0 Dongle Unitname
  device_description: "S0 module to read S0 interfaces (pulse counters)"
  p_version: "v22.12.1-Nijhuis"

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}
  comment: ${device_description} 
  name_add_mac_suffix: false
  project:
    name: smartstuff.s0-dongle
    version: ${p_version}

external_components:
  - source: github://pr#3321
    components: [pulse_meter]
  
esp8266:
  board: esp12e
  restore_from_flash: true

status_led:
  pin:
    number: 2
    inverted: true

ota:

wifi:
#  ssid: !secret wifi_ssid
#  password: !secret wifi_password
  # Enable fallback hotspot (captive portal) in case wifi connection fails
#   reboot_timeout: 0s
  ap:
    ssid: ${device_name}
    ap_timeout: 15s
    
dashboard_import:
  package_import_url: github://mhendriks/esphome-p1/s0-dongle.yaml
  
captive_portal:

web_server:
  port: 80
  
# Enable logging
logger:
  level: INFO
  esp8266_store_log_strings_in_flash: False

api:
#  encryption:
#    key: 
#via Home Assistant Ontwikkelhulpmiddelen > services zoeken op esphome.watermeter_set_water_reading en via deze methode de juiste beginstand invoeren
#   reboot_timeout: 0s
  services:
    - service: s0_reset_total_energy
      then:
        - button.press:
            id: button_reset_total
    - service: s0_set_total_energy
      variables:
        s0_value: int
      then:
        - pulse_meter.set_total_pulses:
            id: pulse
            value: !lambda 'return s0_value;'

globals:
  - id: tot_count
    type: float
    restore_value: no  # aanpassen naar no indien de nieuwe waarde onder de oude ligt
    initial_value: '0'   # beginstand  -> aanpassen via Home Assistant services
  - id: pulse_rate
    type: int
    restore_value: no  # aanpassen naar no indien de nieuwe waarde onder de oude ligt
    initial_value: '1000'   # pulse rate van de kWh meter -> xxx pulses / kWh

          
button:  
  - platform: restart
    id: button_restart_device
    name: Restart Device
  - platform: factory_reset
    id: button_factory_reset
    name: Reset to Factory Defaults
  - platform: template
    id: button_reset_total
    name: Reset Total Energy
    on_press:
      - pulse_meter.set_total_pulses:
          id: pulse
          value: 0    
            
sensor:
  - platform: pulse_meter
    id: pulse
    name: Current Power
    pin: 
      number: 5
      mode:
        input: true
        pullup: true #v3.5 aanzetten
    state_class: measurement
    unit_of_measurement: 'W'
    device_class: power
    internal_filter: 100ms
    internal_filter_mode: EDGE    
    icon: mdi:flash-outline
    filters:
      #- multiply: 0.06 # (60s/1000 pulses per kWh)
      - lambda: return x * ((60.0 / id(pulse_rate)) * 1000.0);
    total:
      id: pulse_tot
      name: Total Energy
      unit_of_measurement: "kWh"
      icon: mdi:circle-slice-3
      state_class: total_increasing
      device_class: energy
      accuracy_decimals: 3
      filters:
        - lambda: return x * (1.0 / id(pulse_rate));
  - platform: total_daily_energy
    id: daily_pulse
    name: Daily Energy
    power_id: pulse
    unit_of_measurement: 'kWh'
    icon: mdi:circle-slice-3
    state_class: total_increasing
    device_class: energy
    accuracy_decimals: 3
    filters:
      # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
  - platform: uptime
    id: device_uptime
    name: Device Uptime

# Enable time component to reset energy at midnight
# https://esphome.io/components/time.html#home-assistant-time-source
time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: "Europe/Amsterdam"

text_sensor:
  - platform: template
    id: device_time
    name: Device Time
    lambda: |-
      char str[17];
      time_t currTime = id(homeassistant_time).now().timestamp;
      strftime(str, sizeof(str), "%Y-%m-%d %H:%M", localtime(&currTime));
      return  { str };
    update_interval: 60s
    
  - platform: wifi_info
    ip_address:
      id: ip_address
      name: IP address
      icon: mdi:ip-network
    ssid:
      id: network_name
      name: Network Name
      icon: mdi:access-point-network
    mac_address:
      id: mac_address
      name: Mac address
      icon: mdi:folder-key-network-outline
      
  - platform: template
    id: config_version
    name: Config Version
    icon: "mdi:label-outline"
    update_interval: 6h
    lambda: return {"$p_version"};
      
  - platform: version
    id: esp_home_version
    name: ESPHome Version
    hide_timestamp: true
